generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["ikk_new"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model active_year {
  id                                                             BigInt               @id(map: "active_year_pk")
  active_year                                                    BigInt?              @unique(map: "active_year_unique")
  agencies_agencies_active_yearToactive_year                     agencies[]           @relation("agencies_active_yearToactive_year")
  ikk_instansi_score_ikk_instansi_score_active_yearToactive_year ikk_instansi_score[] @relation("ikk_instansi_score_active_yearToactive_year")
  ikk_verif_score_ikk_verif_score_active_yearToactive_year       ikk_verif_score[]    @relation("ikk_verif_score_active_yearToactive_year")
  user_user_active_yearToactive_year                             user[]               @relation("user_active_yearToactive_year")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agencies {
  id                                            BigInt               @id
  created_at                                    DateTime?            @db.Timestamp(6)
  created_by                                    BigInt?
  modified_by                                   BigInt?
  updated_at                                    DateTime?            @db.Timestamp(6)
  name                                          String?              @db.VarChar(255)
  category                                      String?              @db.VarChar(255)
  kd_bkn                                        String?              @db.VarChar(100)
  kd_prov                                       String?              @db.VarChar(100)
  kd_kab                                        String?              @db.VarChar(100)
  agency_id_panrb                               BigInt?
  active_year                                   BigInt?
  active_year_agencies_active_yearToactive_year active_year?         @relation("agencies_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "agencies_active_year_fk")
  instansi                                      instansi?            @relation(fields: [agency_id_panrb], references: [agency_id], onDelete: NoAction, onUpdate: NoAction, map: "agencies_instansi_fk")
  ikk_instansi_score                            ikk_instansi_score[]
  ikk_verif_score                               ikk_verif_score[]
  policies                                      policies[]
  user                                          user[]

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ikk_instansi_score {
  id                                                      BigInt       @id
  agency_id                                               BigInt?
  policy_id                                               BigInt?
  active_year                                             BigInt?
  a1                                                      BigInt?
  a2                                                      BigInt?
  a3                                                      BigInt?
  b1                                                      BigInt?
  b2                                                      BigInt?
  b3                                                      BigInt?
  c1                                                      BigInt?
  c2                                                      BigInt?
  c3                                                      BigInt?
  d1                                                      BigInt?
  d2                                                      BigInt?
  jf                                                      Boolean?
  created_by                                              BigInt?
  active_year_ikk_instansi_score_active_yearToactive_year active_year? @relation("ikk_instansi_score_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_active_year_fk")
  agencies                                                agencies?    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_agencies_fk")
  policies                                                policies?    @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_policies_fk")
  user                                                    user?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_user_fk")

  @@schema("ikk_new")
}

model ikk_verif_score {
  id                                                   BigInt       @id
  agency_id                                            BigInt?
  policy_id                                            BigInt?
  active_year                                          BigInt?
  a1                                                   BigInt?
  a2                                                   BigInt?
  a3                                                   BigInt?
  b1                                                   BigInt?
  b2                                                   BigInt?
  b3                                                   BigInt?
  c1                                                   BigInt?
  c2                                                   BigInt?
  c3                                                   BigInt?
  d1                                                   BigInt?
  d2                                                   BigInt?
  jf                                                   Boolean?
  created_by                                           BigInt?
  active_year_ikk_verif_score_active_yearToactive_year active_year? @relation("ikk_verif_score_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_active_year_fk")
  agencies                                             agencies?    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_agencies_fk")
  policies                                             policies?    @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_policies_fk")
  user                                                 user?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_user_fk")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instansi {
  id                 BigInt             @id(map: "instansi_pk")
  agency_id          BigInt?            @unique(map: "instansi_unique")
  agency_name        String?            @db.VarChar(226)
  agency_category_id Int?
  agencies           agencies[]
  instansi_kategori  instansi_kategori? @relation(fields: [agency_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instansi_instansi_kategori_fk")
  user               user[]

  @@schema("ikk_new")
}

model instansi_kategori {
  id           Int        @id(map: "instansi_kategori_pk")
  kat_instansi String?    @db.VarChar
  instansi     instansi[]

  @@schema("ikk_new")
}

model instrument_answer {
  id                  BigInt               @id(map: "instrument_answer_pk")
  question_id         BigInt?
  level_id            BigInt?
  level_description   String?              @db.VarChar
  level_score         BigInt?
  instrument_question instrument_question? @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instrument_answer_instrument_question_fk")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instrument_question {
  id                    BigInt              @id(map: "instrument_question_pk")
  dimension_id          BigInt?
  dimension_name        String?             @db.VarChar
  indicator_id          String?             @db.VarChar
  indicator_column_code String?             @db.VarChar
  indicator_question    String?             @db.VarChar
  indicator_weight      Float?              @db.Real
  dimension_weight      Float?              @db.Real
  final_weight          Float?              @db.Real
  instrument_answer     instrument_answer[]

  @@schema("ikk_new")
}

model koor_instansi_analis {
  id                                                 BigInt    @id @default(autoincrement())  // Auto-generate id
  created_at                                         DateTime? @db.Timestamp(6)
  created_by                                         BigInt?
  modified_by                                        BigInt?
  updated_at                                         DateTime? @db.Timestamp(6)
  koor_instansi_id                                   BigInt?
  analis_instansi_id                                 BigInt?
  user_koor_instansi_analis_analis_instansi_idTouser user?     @relation("koor_instansi_analis_analis_instansi_idTouser", fields: [analis_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_instansi_analis_koor_instansi_idTouser   user?     @relation("koor_instansi_analis_koor_instansi_idTouser", fields: [koor_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model koor_instansi_validator {
  id                                                  BigInt    @id
  created_at                                          DateTime? @db.Timestamp(6)
  created_by                                          BigInt?
  modified_by                                         BigInt?
  updated_at                                          DateTime? @db.Timestamp(6)
  koor_instansi_id                                    BigInt?
  validator_id                                        BigInt?
  user_koor_instansi_validator_koor_instansi_idTouser user?     @relation("koor_instansi_validator_koor_instansi_idTouser", fields: [koor_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_instansi_validator_validator_idTouser     user?     @relation("koor_instansi_validator_validator_idTouser", fields: [validator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model koor_nasional_validator {
  id                                                  BigInt    @id
  created_at                                          DateTime? @db.Timestamp(6)
  created_by                                          BigInt?
  modified_by                                         BigInt?
  updated_at                                          DateTime? @db.Timestamp(6)
  validator_id                                        BigInt?
  koor_nasional_id                                    BigInt?
  user_koor_nasional_validator_koor_nasional_idTouser user?     @relation("koor_nasional_validator_koor_nasional_idTouser", fields: [koor_nasional_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_nasional_validator_validator_idTouser     user?     @relation("koor_nasional_validator_validator_idTouser", fields: [validator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model policies {
  id                               BigInt               @id(map: "policies_pk")
  created_at                       DateTime?            @db.Timestamp(6)
  created_by                       BigInt?
  name                             String?
  agency_id                        BigInt?
  validated_by                     BigInt?
  is_valid                         Boolean?
  sector                           String?              @db.VarChar
  file_url                         String?              @db.VarChar
  type                             String?              @db.VarChar
  ikk_instansi_score               ikk_instansi_score[]
  ikk_verif_score                  ikk_verif_score[]
  agencies                         agencies?            @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policies_agencies_fk")
  user_policies_created_byTouser   user?                @relation("policies_created_byTouser", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policies_user_created_by_FK")
  user_policies_validated_byTouser user?                @relation("policies_validated_byTouser", fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policies_user_validated_by_FK")

  @@schema("ikk_new")
}

model role {
  id          BigInt      @id @unique(map: "role_unique")
  created_at  DateTime?   @db.Timestamp(6)
  created_by  BigInt?
  modified_by BigInt?
  updated_at  DateTime?   @db.Timestamp(6)
  name        String?     @db.VarChar(255)
  role_user   role_user[]

  @@schema("ikk_new")
}

model role_user {
  user_id BigInt @id
  role_id BigInt
  role    role   @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model surat_penunjukkan {
  id         BigInt    @id @default(autoincrement())
  file       String?
  created_at DateTime? @default(dbgenerated("'2025-05-01 23:36:38.525109'::timestamp without time zone")) @db.Timestamp(6)
  user       user[]

  @@schema("ikk_new")
}

model user {
  id                                                                     BigInt                    @id @default(autoincrement())
  created_at                                                             DateTime?                 @db.Timestamp(6)
  created_by                                                             BigInt?
  modified_by                                                            BigInt?
  updated_at                                                             DateTime?                 @db.Timestamp(6)
  deleted                                                                String?                   @db.Bit(1)
  deleted_at                                                             DateTime?                 @db.Timestamp(6)
  deleted_by                                                             BigInt?
  email                                                                  String?                   @db.VarChar(255) @unique
  name                                                                   String?                   @db.VarChar(255)
  nik                                                                    String?                   @db.VarChar(255)
  password                                                               String?                   @db.VarChar(255)
  phone                                                                  String?                   @db.VarChar(255)
  position                                                               String?                   @db.VarChar(255)
   status                                                                String?                   @db.VarChar(255) @default("nonaktif") // Default statusnya inactive
  username                                                               String?                   @db.VarChar(255) @unique
  work_unit                                                              String?                   @db.VarChar(255)
  agency_id                                                              BigInt?
  agency_id_panrb                                                        BigInt?
  active_year                                                            BigInt?
  penunjukkan_id                                                         BigInt?
  ikk_instansi_score                                                     ikk_instansi_score[]
  ikk_verif_score                                                        ikk_verif_score[]
  koor_instansi_analis_koor_instansi_analis_analis_instansi_idTouser     koor_instansi_analis[]    @relation("koor_instansi_analis_analis_instansi_idTouser")
  koor_instansi_analis_koor_instansi_analis_koor_instansi_idTouser       koor_instansi_analis[]    @relation("koor_instansi_analis_koor_instansi_idTouser")
  koor_instansi_validator_koor_instansi_validator_koor_instansi_idTouser koor_instansi_validator[] @relation("koor_instansi_validator_koor_instansi_idTouser")
  koor_instansi_validator_koor_instansi_validator_validator_idTouser     koor_instansi_validator[] @relation("koor_instansi_validator_validator_idTouser")
  koor_nasional_validator_koor_nasional_validator_koor_nasional_idTouser koor_nasional_validator[] @relation("koor_nasional_validator_koor_nasional_idTouser")
  koor_nasional_validator_koor_nasional_validator_validator_idTouser     koor_nasional_validator[] @relation("koor_nasional_validator_validator_idTouser")
  policies_policies_created_byTouser                                     policies[]                @relation("policies_created_byTouser")
  policies_policies_validated_byTouser                                   policies[]                @relation("policies_validated_byTouser")
  role_user                                                              role_user?
  active_year_user_active_yearToactive_year                              active_year?              @relation("user_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "user_active_year_fk")
  agencies                                                               agencies?                 @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instansi                                                               instansi?                 @relation(fields: [agency_id_panrb], references: [agency_id], onDelete: NoAction, onUpdate: NoAction)
  surat_penunjukkan                                                      surat_penunjukkan?        @relation(fields: [penunjukkan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model validator_agency {
  id           BigInt    @id
  created_at   DateTime? @db.Timestamp(6)
  created_by   BigInt?
  modified_by  BigInt?
  updated_at   DateTime? @db.Timestamp(6)
  agencies_id  BigInt?
  validator_id BigInt?

  @@schema("ikk_new")
}
