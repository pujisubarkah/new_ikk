generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["ikk_new"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model active_year {
  id                                                 BigInt         @id(map: "active_year_pk") @default(autoincrement())
  active_year                                        BigInt?        @unique(map: "active_year_unique")
  agencies_agencies_active_yearToactive_year         agencies[]     @relation("agencies_active_yearToactive_year")
  ikk_file_ikk_file_active_yearToactive_year         ikk_file[]     @relation("ikk_file_active_yearToactive_year")
  ikk_ki_score_ikk_ki_score_active_yearToactive_year ikk_ki_score[] @relation("ikk_ki_score_active_yearToactive_year")
  ikk_ku_score_ikk_ku_score_active_yearToactive_year ikk_ku_score[] @relation("ikk_ku_score_active_yearToactive_year")
  user_user_active_yearToactive_year                 user[]         @relation("user_active_yearToactive_year")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model agencies {
  id                                            BigInt             @id @default(autoincrement())
  created_at                                    DateTime?          @db.Timestamp(6)
  created_by                                    BigInt?
  modified_by                                   BigInt?
  updated_at                                    DateTime?          @db.Timestamp(6)
  name                                          String?            @db.VarChar(255)
  category                                      String?            @db.VarChar(255)
  kd_bkn                                        String?            @db.VarChar(100)
  kd_prov                                       String?            @db.VarChar(100)
  kd_kab                                        String?            @db.VarChar(100)
  agency_id_panrb                               BigInt?
  active_year                                   BigInt?
  active_year_agencies_active_yearToactive_year active_year?       @relation("agencies_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "agencies_active_year_fk")
  instansi                                      instansi?          @relation(fields: [agency_id_panrb], references: [agency_id], onDelete: NoAction, onUpdate: NoAction, map: "agencies_instansi_fk")
  ikk_ki_score                                  ikk_ki_score[]
  ikk_ku_score                                  ikk_ku_score[]
  policy                                        policy[]
  user                                          user[]
  validator_agency                              validator_agency[]

  @@schema("ikk_new")
}

model helpdesk {
  id           BigInt    @id @default(autoincrement())
  nama_lengkap String
  email_aktif  String
  instansi     String?
  masalah      String?
  pesan        String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ikk_file {
  id                                               BigInt         @id(map: "ikk_file_pk")
  policy_id                                        BigInt?
  active_year                                      BigInt?
  file_url_a1                                      String?        @db.VarChar
  file_url_a2                                      String?        @db.VarChar
  file_url_a3                                      String?        @db.VarChar
  file_url_b1                                      String?        @db.VarChar
  file_url_b2                                      String?        @db.VarChar
  file_url_b3                                      String?        @db.VarChar
  file_url_c1                                      String?        @db.VarChar
  file_url_c2                                      String?        @db.VarChar
  file_url_c3                                      String?        @db.VarChar
  file_url_d1                                      String?        @db.VarChar
  file_url_d2                                      String?        @db.VarChar
  file_url_jf                                      String?        @db.VarChar
  created_by                                       BigInt?
  iki_score_id                                     BigInt?
  active_year_ikk_file_active_yearToactive_year    active_year?   @relation("ikk_file_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "ikk_file_active_year_fk")
  ikk_ki_score_ikk_file_iki_score_idToikk_ki_score ikk_ki_score?  @relation("ikk_file_iki_score_idToikk_ki_score", fields: [iki_score_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  policy                                           policy?        @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_file_policy_fk")
  user                                             user?          @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_file_user_fk")
  ikk_ki_score_ikk_ki_score_ikk_fileToikk_file     ikk_ki_score[] @relation("ikk_ki_score_ikk_fileToikk_file")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ikk_ki_score {
  id                                                BigInt       @id(map: "ikk_instansi_score_pkey")
  agency_id                                         BigInt?
  policy_id                                         BigInt?
  active_year                                       BigInt?
  a1                                                BigInt?
  a2                                                BigInt?
  a3                                                BigInt?
  b1                                                BigInt?
  b2                                                BigInt?
  b3                                                BigInt?
  c1                                                BigInt?
  c2                                                BigInt?
  c3                                                BigInt?
  d1                                                BigInt?
  d2                                                BigInt?
  jf                                                Boolean?
  created_by                                        BigInt?
  a_total_score                                     Float?       @default(dbgenerated("(((0.375 * (a1)::numeric) + (0.375 * (a2)::numeric)) + (0.25 * (a3)::numeric))")) @db.Real
  c_total_score                                     Float?       @default(dbgenerated("(((0.35 * (c1)::numeric) + (0.35 * (c2)::numeric)) + (0.30 * (c3)::numeric))")) @db.Real
  d_total_score                                     Float?       @default(dbgenerated("((0.50 * (d1)::numeric) + (0.50 * (d2)::numeric))")) @db.Real
  informasi_a                                       String?      @db.VarChar
  informasi_b                                       String?      @db.VarChar
  informasi_c                                       String?      @db.VarChar
  informasi_d                                       String?      @db.VarChar
  informasi_jf                                      String?      @db.VarChar
  modified_by                                       BigInt?
  ikk_total_score                                   Float?       @default(dbgenerated("(((((0.20 * (((0.375 * (a1)::numeric) + (0.375 * (a2)::numeric)) + (0.25 * (a3)::numeric))) + (0.25 * (((0.35 * (b1)::numeric) + (0.35 * (b2)::numeric)) + (0.30 * (b3)::numeric)))) + (0.30 * (((0.35 * (c1)::numeric) + (0.35 * (c2)::numeric)) + (0.30 * (c3)::numeric)))) + (0.15 * ((0.50 * (d1)::numeric) + (0.50 * (d2)::numeric)))) + (0.10 * (\nCASE\n    WHEN jf THEN 1\n    ELSE 0\nEND)::numeric))")) @db.Real
  b_total_score                                     Float?       @default(dbgenerated("(0.25 * (((0.35 * (b1)::numeric) + (0.35 * (b2)::numeric)) + (0.30 * (b3)::numeric)))")) @db.Real
  ikk_file                                          BigInt?
  ikk_file_ikk_file_iki_score_idToikk_ki_score      ikk_file[]   @relation("ikk_file_iki_score_idToikk_ki_score")
  active_year_ikk_ki_score_active_yearToactive_year active_year? @relation("ikk_ki_score_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_active_year_fk")
  agencies                                          agencies?    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_agencies_fk")
  policy                                            policy?      @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_policies_fk")
  user                                              user?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_instansi_score_user_fk")
  ikk_file_ikk_ki_score_ikk_fileToikk_file          ikk_file?    @relation("ikk_ki_score_ikk_fileToikk_file", fields: [ikk_file], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ikk_ku_score {
  id                                                BigInt       @id(map: "ikk_verif_score_pkey")
  agency_id                                         BigInt?
  policy_id                                         BigInt?
  active_year                                       BigInt?
  a1                                                BigInt?
  a2                                                BigInt?
  a3                                                BigInt?
  b1                                                BigInt?
  b2                                                BigInt?
  b3                                                BigInt?
  c1                                                BigInt?
  c2                                                BigInt?
  c3                                                BigInt?
  d1                                                BigInt?
  d2                                                BigInt?
  jf                                                Boolean?
  created_by                                        BigInt?
  a_total_score                                     Float?       @default(dbgenerated("(((0.375 * (a1)::numeric) + (0.375 * (a2)::numeric)) + (0.25 * (a3)::numeric))")) @db.Real
  c_total_score                                     Float?       @default(dbgenerated("(((0.35 * (c1)::numeric) + (0.35 * (c2)::numeric)) + (0.30 * (c3)::numeric))")) @db.Real
  d_total_score                                     Float?       @default(dbgenerated("((0.50 * (d1)::numeric) + (0.50 * (d2)::numeric))")) @db.Real
  catatan_a                                         String?      @db.VarChar
  catatan_b                                         String?      @db.VarChar
  catatan_c                                         String?      @db.VarChar
  catatan_d                                         String?      @db.VarChar
  catatan_jf                                        String?      @db.VarChar
  ikk_total_score                                   Float?       @default(dbgenerated("(((((0.20 * (((0.375 * (a1)::numeric) + (0.375 * (a2)::numeric)) + (0.25 * (a3)::numeric))) + (0.25 * (((0.35 * (b1)::numeric) + (0.35 * (b2)::numeric)) + (0.30 * (b3)::numeric)))) + (0.30 * (((0.35 * (c1)::numeric) + (0.35 * (c2)::numeric)) + (0.30 * (c3)::numeric)))) + (0.15 * ((0.50 * (d1)::numeric) + (0.50 * (d2)::numeric)))) + (0.10 * (\nCASE\n    WHEN jf THEN 1\n    ELSE 0\nEND)::numeric))")) @db.Real
  b_total_score                                     Float?       @default(dbgenerated("(0.25 * (((0.35 * (b1)::numeric) + (0.35 * (b2)::numeric)) + (0.30 * (b3)::numeric)))")) @db.Real
  active_year_ikk_ku_score_active_yearToactive_year active_year? @relation("ikk_ku_score_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_active_year_fk")
  agencies                                          agencies?    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_agencies_fk")
  policy                                            policy?      @relation(fields: [policy_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_policies_fk")
  user                                              user?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ikk_verif_score_user_fk")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instansi {
  id                 BigInt             @id(map: "instansi_pk")
  agency_id          BigInt?            @unique(map: "instansi_unique")
  agency_name        String?            @db.VarChar(226)
  agency_category_id Int?
  agencies           agencies[]
  instansi_kategori  instansi_kategori? @relation(fields: [agency_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instansi_instansi_kategori_fk")
  policy             policy[]
  user               user[]

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instansi_kategori {
  id           Int        @id(map: "instansi_kategori_pk")
  kat_instansi String?    @db.VarChar
  instansi     instansi[]

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instrument_answer {
  id                  BigInt               @id(map: "instrument_answer_pk")
  question_id         BigInt?
  level_id            BigInt?
  level_description   String?              @db.VarChar
  level_score         BigInt?
  instrument_question instrument_question? @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instrument_answer_instrument_question_fk")

  @@schema("ikk_new")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instrument_question {
  id                       BigInt              @id(map: "instrument_question_pk")
  dimension_id             BigInt?
  dimension_name           String?             @db.VarChar
  indicator_id             String?             @db.VarChar
  indicator_column_code    String?             @db.VarChar
  indicator_question       String?             @db.VarChar
  indicator_weight         Float?              @db.Real
  dimension_weight         Float?              @db.Real
  final_weight             Float?              @db.Real
  indicator_description    String?             @db.VarChar
  bukti_dukung_description String?             @db.VarChar
  instrument_answer        instrument_answer[]

  @@schema("ikk_new")
}

model koor_instansi_analis {
  id                                                 BigInt    @id @default(autoincrement())
  created_at                                         DateTime? @db.Timestamp(6)
  created_by                                         BigInt?
  modified_by                                        BigInt?
  updated_at                                         DateTime? @db.Timestamp(6)
  koor_instansi_id                                   BigInt?
  analis_instansi_id                                 BigInt?
  user_koor_instansi_analis_analis_instansi_idTouser user?     @relation("koor_instansi_analis_analis_instansi_idTouser", fields: [analis_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_instansi_analis_koor_instansi_idTouser   user?     @relation("koor_instansi_analis_koor_instansi_idTouser", fields: [koor_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model koor_instansi_validator {
  id                                                  BigInt    @id @default(autoincrement())
  created_at                                          DateTime? @db.Timestamp(6)
  created_by                                          BigInt?
  modified_by                                         BigInt?
  updated_at                                          DateTime? @db.Timestamp(6)
  koor_instansi_id                                    BigInt?
  validator_id                                        BigInt?
  koor_nasional_id                                    BigInt?
  user_koor_instansi_validator_koor_instansi_idTouser user?     @relation("koor_instansi_validator_koor_instansi_idTouser", fields: [koor_instansi_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_instansi_validator_koor_nasional_idTouser user?     @relation("koor_instansi_validator_koor_nasional_idTouser", fields: [koor_nasional_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model koor_nasional_validator {
  id                                                  BigInt    @id @default(autoincrement())
  created_at                                          DateTime? @db.Timestamp(6)
  created_by                                          BigInt?
  modified_by                                         BigInt?
  updated_at                                          DateTime? @db.Timestamp(6)
  validator_id                                        BigInt?
  koor_nasional_id                                    BigInt?
  user_koor_nasional_validator_koor_nasional_idTouser user?     @relation("koor_nasional_validator_koor_nasional_idTouser", fields: [koor_nasional_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_koor_nasional_validator_validator_idTouser     user?     @relation("koor_nasional_validator_validator_idTouser", fields: [validator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model notifikasi {
  id         BigInt    @id(map: "notifikaasi_pkey") @default(autoincrement())
  role_id    BigInt?
  pesan      String?
  policy_id  BigInt?
  dibaca     Boolean?
  created_by BigInt?
  created_at DateTime? @default(dbgenerated("'2025-05-13 08:46:02.72004'::timestamp without time zone")) @db.Timestamp(6)

  @@schema("ikk_new")
}

model policy {
  id                                           BigInt           @id(map: "policy_baru_pkey") @default(autoincrement())
  created_at                                   DateTime?        @db.Timestamptz(6)
  created_by                                   BigInt?
  name                                         String?
  name_detail                                  String?
  agency_id                                    BigInt?
  validated_by                                 BigInt?
  is_valid                                     Boolean?
  sector                                       String?
  lainnya                                      String?
  file_url                                     String?
  type                                         String?
  agency_id_panrb                              BigInt?
  active_year                                  BigInt?
  policy_status                                String?
  policy_process                               String?
  progress                                     String?
  effective_date                               DateTime?        @db.Date
  enumerator_id                                BigInt?
  assigned_by_admin_id                         BigInt?
  processed_by_enumerator_id                   BigInt?
  assigned_by_admin_at                         DateTime?        @db.Timestamp(6)
  ikk_file                                     ikk_file[]
  ikk_ki_score                                 ikk_ki_score[]
  ikk_ku_score                                 ikk_ku_score[]
  agencies                                     agencies?        @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_agency_id_fkey")
  instansi                                     instansi?        @relation(fields: [agency_id_panrb], references: [agency_id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_agency_id_panrb_fkey")
  user_policy_assigned_by_admin_idTouser       user?            @relation("policy_assigned_by_admin_idTouser", fields: [assigned_by_admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_assigned_by_admin_id_fkey")
  user_policy_created_byTouser                 user?            @relation("policy_created_byTouser", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_created_by_fkey")
  user_policy_enumerator_idTouser              user?            @relation("policy_enumerator_idTouser", fields: [enumerator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_enumerator_id_fkey")
  user_policy_processed_by_enumerator_idTouser user?            @relation("policy_processed_by_enumerator_idTouser", fields: [processed_by_enumerator_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_processed_by_enumerator_id_fkey")
  user_policy_validated_byTouser               user?            @relation("policy_validated_byTouser", fields: [validated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "policy_baru_validated_by_fkey")
  policy_program                               policy_program[]

  @@schema("ikk_new")
}

model policy_program {
  id          BigInt  @id @default(autoincrement())
  policy_id   BigInt?
  dasar_hukum Json
  program     String
  file_url    String?
  policy      policy? @relation(fields: [policy_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("ikk_new")
}

model role {
  id          BigInt      @id @unique(map: "role_unique")
  created_at  DateTime?   @db.Timestamp(6)
  created_by  BigInt?
  modified_by BigInt?
  updated_at  DateTime?   @db.Timestamp(6)
  name        String?     @db.VarChar(255)
  role_user   role_user[]

  @@schema("ikk_new")
}

model role_user {
  user_id BigInt @id
  role_id BigInt
  role    role   @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}

model surat_penunjukkan {
  id         BigInt    @id @default(autoincrement())
  file       String?
  created_at DateTime? @default(dbgenerated("'2025-05-01 23:36:38.525109'::timestamp without time zone")) @db.Timestamp(6)
  user       user[]

  @@schema("ikk_new")
}

model user {
  id                                                                     BigInt                    @id @default(autoincrement())
  created_at                                                             DateTime?                 @db.Timestamp(6)
  created_by                                                             BigInt?
  modified_by                                                            BigInt?
  updated_at                                                             DateTime?                 @db.Timestamp(6)
  deleted                                                                String?                   @db.Bit(1)
  deleted_at                                                             DateTime?                 @db.Timestamp(6)
  deleted_by                                                             BigInt?
  email                                                                  String?                   @db.VarChar(255)
  name                                                                   String?                   @db.VarChar(255)
  nik                                                                    String?                   @db.VarChar(255)
  password                                                               String?                   @db.VarChar(255)
  phone                                                                  String?                   @db.VarChar(255)
  position                                                               String?                   @db.VarChar(255)
  status                                                                 String?                   @db.VarChar(255)
  username                                                               String?                   @db.VarChar(255) @unique
  work_unit                                                              String?                   @db.VarChar(255)
  agency_id                                                              BigInt?
  agency_id_panrb                                                        BigInt?
  active_year                                                            BigInt?
  penunjukkan_id                                                         BigInt?
  ikk_file                                                               ikk_file[]
  ikk_ki_score                                                           ikk_ki_score[]
  ikk_ku_score                                                           ikk_ku_score[]
  koor_instansi_analis_koor_instansi_analis_analis_instansi_idTouser     koor_instansi_analis[]    @relation("koor_instansi_analis_analis_instansi_idTouser")
  koor_instansi_analis_koor_instansi_analis_koor_instansi_idTouser       koor_instansi_analis[]    @relation("koor_instansi_analis_koor_instansi_idTouser")
  koor_instansi_validator_koor_instansi_validator_koor_instansi_idTouser koor_instansi_validator[] @relation("koor_instansi_validator_koor_instansi_idTouser")
  koor_instansi_validator_koor_instansi_validator_koor_nasional_idTouser koor_instansi_validator[] @relation("koor_instansi_validator_koor_nasional_idTouser")
  koor_nasional_validator_koor_nasional_validator_koor_nasional_idTouser koor_nasional_validator[] @relation("koor_nasional_validator_koor_nasional_idTouser")
  koor_nasional_validator_koor_nasional_validator_validator_idTouser     koor_nasional_validator[] @relation("koor_nasional_validator_validator_idTouser")
  policy_policy_assigned_by_admin_idTouser                               policy[]                  @relation("policy_assigned_by_admin_idTouser")
  policy_policy_created_byTouser                                         policy[]                  @relation("policy_created_byTouser")
  policy_policy_enumerator_idTouser                                      policy[]                  @relation("policy_enumerator_idTouser")
  policy_policy_processed_by_enumerator_idTouser                         policy[]                  @relation("policy_processed_by_enumerator_idTouser")
  policy_policy_validated_byTouser                                       policy[]                  @relation("policy_validated_byTouser")
  role_user                                                              role_user?
  active_year_user_active_yearToactive_year                              active_year?              @relation("user_active_yearToactive_year", fields: [active_year], references: [active_year], onDelete: NoAction, onUpdate: NoAction, map: "user_active_year_fk")
  agencies                                                               agencies?                 @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instansi                                                               instansi?                 @relation(fields: [agency_id_panrb], references: [agency_id], onDelete: NoAction, onUpdate: NoAction)
  surat_penunjukkan                                                      surat_penunjukkan?        @relation(fields: [penunjukkan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  validator_agency                                                       validator_agency[]

  @@schema("ikk_new")
}

model validator_agency {
  id           BigInt    @id
  created_at   DateTime? @db.Timestamp(6)
  created_by   BigInt?
  modified_by  BigInt?
  updated_at   DateTime? @db.Timestamp(6)
  agencies_id  BigInt?
  validator_id BigInt?
  agencies     agencies? @relation(fields: [agencies_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?     @relation(fields: [validator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("ikk_new")
}
